name: Accessibility & Testing CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Accessibility Testing
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Run accessibility tests
        run: |
          flutter test test/accessibility_test.dart
          flutter test test/test_main.dart

      - name: Generate accessibility report
        run: |
          flutter test --coverage test/accessibility_test.dart
          genhtml coverage/lcov.info -o coverage/html

      - name: Upload accessibility coverage
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-coverage
          path: coverage/html/

  # Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run unit tests
        run: flutter test --coverage

      - name: Upload unit test coverage
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Widget Tests
  widget-tests:
    name: Widget Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Run widget tests
        run: flutter test test/widget/

      - name: Generate golden files
        run: flutter test --update-goldens test/golden/

  # Integration Tests (Android)
  integration-tests-android:
    name: Integration Tests (Android)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Get dependencies
        run: flutter pub get

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-api-30

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            flutter test integration_test/accessibility_integration_test.dart
            flutter test integration_test/performance_integration_test.dart

  # Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build release APK
        run: flutter build apk --release

      - name: Run performance analysis
        run: |
          flutter analyze --fatal-infos
          flutter test test/performance/

      - name: Bundle size analysis
        run: |
          flutter build apk --analyze-size --target-platform android-arm64

      - name: Upload performance artifacts
        uses: actions/upload-artifact@v3
        with:
          name: performance-reports
          path: |
            build/app/outputs/flutter-apk/
            build/app/reports/

  # Multi-language Tests
  i18n-tests:
    name: Internationalization Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Generate localizations
        run: flutter gen-l10n

      - name: Run i18n tests
        run: flutter test test/i18n/

      - name: Validate translations
        run: |
          echo "Checking for missing translations..."
          # Add custom validation scripts here

  # Security Tests
  security-tests:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dependency vulnerability scan
        run: |
          # Install security scanning tools
          dart pub global activate pana

          # Scan for vulnerabilities
          dart pub deps --json > deps.json

          # Check for outdated packages
          flutter pub outdated --json > outdated.json

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            deps.json
            outdated.json

  # Code Quality
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Run code analysis
        run: |
          flutter analyze --fatal-infos
          dart format --set-exit-if-changed .

      - name: Run custom lints
        run: |
          dart run custom_lint

      - name: Check for TODO comments
        run: |
          echo "Checking for TODO comments in production code..."
          ! grep -r "TODO\|FIXME\|HACK" lib/ || exit 1
